@page
@using System.Collections.Specialized
@using Microsoft.EntityFrameworkCore.Internal
@model LogisticsBooking.FrontEnd.Pages.Client.Schedule.CreateNewSchedule

@{
  var culture = CultureInfo.CurrentCulture;
}

<style>
    .input-group-res {
        width: 100%;
        width: 70px;
        box-sizing: border-box;
    }
    
    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }
    
    
    .div > input {
        display: inline-block;
        display: -moz-inline-box;
        *display: inline; /* For IE7 */
        zoom: 1; /* Trigger hasLayout */
        width: 33%;
        text-align: center;
    }
    
    .parent{
        width: 100%;
        text-align: justify;
    }

    .kiddo{
        display: inline-block;
        vertical-align: top;
        width: 20%;
        margin: 10px;
        text-align: left;
    }
    
    .kiddo-25{
        display: inline-block;
        vertical-align: top;
        width: 29%;
        margin: 10px;
        text-align: left;
        
    }

    .bumper{
        width: 100%;
    }

</style>

<body onload="hideAllEmpty()">


<form method="post">


    <div class="container-fluid">

        <div class="card mb-4">
            <div class="card-header">
                <h2>@localizer.Get("Create new plan")</h2>
            </div>
            <div class="card-body">

                <div class="row">
                    <div class="col-6">


                        <div class="row">
                            <div class="col-12">
                                <div class="card bg-light text-center">
                                    <div class="card-body p-1">
                                        <table>
                                            <tr>
                                                <th>@localizer.Get("input total pallets for all intervals")</th>
                                                                            <th>@localizer.Get("Input the name of the plan")</th>
                                                
                                            </tr>
                                            <tr>
                                                <td class="d-flex justify-content-start align-items-baseline">
                                                    <div class="apply btn btn-primary">Bekr√¶ft</div>&nbsp;&nbsp;
                                                    
                                                    <p class=" ml-2 mr-2">Paller</p>
                                                    <input type="number" class="pallets input-group-res form-control" id="allPalletsNumber"/>
                                                    <p class="ml-2 mr-2">Misch</p>
                                                        <input type="number" class="misPallets input-group-res form-control" id="allMisNumber"/>
                                                  
                                                </td>
                                                <td>
                                                    <input type="text" class="form-control" name="name"/>
                                                </td>
                                                
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-12">
                                <div class="list-group" style="">

                                     <div class="list-group-item list-group-item-action d-flex ">
                                                        <div class="">
                                                            <p style="font-weight: bold" title="Totalt antal bundpaller for the givne interval" class="mr-3">@localizer.Get("Show/Hide")</p>   
                                                        </div>
                                                        <div class=" parent">
                                                            <div class="row">
                                    
                                                                <div class="col-2">
                                                                    <p style="font-weight: bold" title="Totalt antal bundpaller for the givne interval" class="text-center">@localizer.Get("Pallets")</p>
                                                                </div>
                                                                <div class="col-3">
                                                                    <p style="font-weight: bold" title="Starttidspunkt for the givne interval" class="text-center">Start</p>
                                                                </div>
                                                                <div class="col-3">
                                                                    <p style="font-weight: bold" title="Sluttidspunkt for the givne interval" class="text-center">@localizer.Get("End")</p>
                                                                </div>
                                                                <div class="col-4">
                                                                    <p style="font-weight: bold" title="Sluttidspunkt for the givne interval" class="text-center">@localizer.Get("Miscellaneous pallets")</p>
                                                                </div>
                                                                
                                    
                                    
                                    
                                                            </div>
                                                        </div>
                                                        
                                    
                                    
                                    
                                    
                                                    </div>


                                    @foreach (var interval in @Model.Intervals.GetRange(0, @Model.Intervals.Count))
                                    {
                                        <div id="@Model.Intervals.IndexOf(interval)div" ondrop="drop(event)" ondragover="allowDrop(event)">
                                            <div class="list-group-item list-group-item-action d-flex" id="@Model.Intervals.IndexOf(interval)drag" draggable="true" ondragstart="drag(event)">
                                                <div class="btn input-group-res" onclick="toggle('@interval.InternalId')">
                                                    <i class="fas fa-toggle-on"></i>
                                                </div>
                                                <div class="@interval.InternalId parent">
                                                    <input type="number" class="input-group- kiddo applyPallets form-control" style="text-align: center;" id="@interval.InternalId"  name="Intervals[@Model.Intervals.IndexOf(interval)].BottomPallets"/>
                                                    <input type="text" value="@interval.StartTime.TimeOfDay"  class="time kiddo form-control" style="text-align: center;"  name="Intervals[@Model.Intervals.IndexOf(interval)].StartTime"/>
                                                    <input type="text" value="@interval.EndTime.TimeOfDay"  class="time kiddo form-control" style="text-align: center;"  name="Intervals[@Model.Intervals.IndexOf(interval)].EndTime"/>
                                                    <input class="kiddo form-control applyMis " name="Intervals[@Model.Intervals.IndexOf(interval)].MiscPallets"/>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="col-6">

                        <div class="row">
                            <div class="col-12">

                                <div class="d-flex justify-content-center">
                                      <h3>@localizer.Get("Select which days this plan should be allowed to be booked on")</h3>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                               

                                    <div class="form-check">
                                        <input class="form-check-input" name="day" type="checkbox" value="monday">
                                        <label class="form-check-label">
                                            @culture.DateTimeFormat.GetDayName(DayOfWeek.Monday) 
                                        </label>
                                    </div>


                                    <div class="form-check">
                                        <input class="form-check-input" name="day" type="checkbox" value="tuesday">
                                        <label class="form-check-label">
                                           @culture.DateTimeFormat.GetDayName(DayOfWeek.Tuesday) 
                                        </label>
                                    </div>

                                    <div class="form-check">
                                        <input class="form-check-input" name="day"  type="checkbox" value="wednesday">
                                        <label class="form-check-label">
                                            @culture.DateTimeFormat.GetDayName(DayOfWeek.Wednesday) 
                                        </label>
                                    </div>

                                    <div class="form-check">
                                        <input class="form-check-input" name="day"  type="checkbox" value="thursday">
                                        <label class="form-check-label">
                                            @culture.DateTimeFormat.GetDayName(DayOfWeek.Thursday) 
                                        </label>
                                    </div>

                                    <div class="form-check">
                                        <input class="form-check-input" name="day"  type="checkbox" value="friday">
                                        <label class="form-check-label">
                                            @culture.DateTimeFormat.GetDayName(DayOfWeek.Friday) 
                                        </label>
                                    </div>

                                    <div class="form-check">
                                        <input class="form-check-input" name="day"  type="checkbox" value="saturday">
                                        <label class="form-check-label">
                                             @culture.DateTimeFormat.GetDayName(DayOfWeek.Saturday) 
                                        </label>
                                    </div>

                                    <div class="form-check">
                                        <input class="form-check-input" name="day"  type="checkbox" value="sunday">
                                        <label class="form-check-label">
                                            @culture.DateTimeFormat.GetDayName(DayOfWeek.Sunday) 
                                        </label>
                                    </div>


                                    <button asp-page-handler="Standard" type="submit" class="btn btn-primary">@localizer.Get("Create")</button>
                                                                            

                               


                            </div>
                        </div>


                    </div>
                </div>

            </div>
        </div>


    </div>


</form>

</body>

@section Scripts{
    <script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
        <script src="~/js/DateRingePicker.js"></script>
 

    <script>
    
   
    
    $('.apply').on('click',function(e ) {
      e.preventDefault();
      var pallets = $('.pallets').val();
      var mis = $('.misPallets').val();
      
      $('.applyPallets').each(function() {
        $(this).val(pallets); 
      });
      
      
      $('.applyMis').each(function() {
              $(this).val(mis); 
            });
            
      
    });
    
        function toggle(className) {
            var x = '.' + className;
            if ($(x).is(":hidden")) {
                show(className)
                document.getElementById(className).value = '33';
            } else {
                hide(className)
                document.getElementById(className).value = '0';
            }
        }
  
 
        function hide(className) {
            var x = '.' + className;
            $(x).hide();
            document.getElementById(className).value = '0';
        }
   


        function show(className) {
            var x = '.' + className;
            $(x).show();
            document.getElementById(className).value = '33';
        }
        
        function changeAllPallets(value) {
            var i;
            for (i = 0; i < @Model.Intervals.Count; i++) {
                if ($(x).is(":hidden")) {

                } else {
                    document.getElementById(className).value = parseInt(value);
                }
            }
        }

    </script>

    <script>
        function hideAllEmpty()
        {
            var i;
            for (i = 11; i < 27; i++) {
                hide(i); 
            }
        }
    </script>

    <script>
        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("src", ev.target.id);
        }

        function drop(ev) {
            ev.preventDefault();
            var src = document.getElementById(ev.dataTransfer.getData("src"));
            var srcParent = src.parentNode;
            var tgt = ev.currentTarget.firstElementChild;

            ev.currentTarget.replaceChild(src, tgt);
            srcParent.appendChild(tgt);
        }
    </script>

}