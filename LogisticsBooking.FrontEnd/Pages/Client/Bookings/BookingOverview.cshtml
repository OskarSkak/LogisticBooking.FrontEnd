@page "{id?}"
@using LogisticsBooking.FrontEnd.DataServices.Models
@using LogisticsBooking.FrontEnd.Services
@using Microsoft.AspNetCore.Antiforgery
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<BookingOverviewModel> localizer
@inject IHtmlLocalizer<BookingOverviewModel> htmlLocalizer
@model LogisticsBooking.FrontEnd.Pages.Client.Bookings.BookingOverviewModel
@inject IAntiforgery AntiForgery;

@section Styles
{
     <link href="https://cdn.datatables.net/1.10.20/css/dataTables.bootstrap4.min.css" rel="stylesheet">
}




    
      

<body>

<div class="container-fluid">

    <div class="d-sm-flex align-items-center  mb-4">
        <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
        <form class="ml-auto" asp-page-handler="ExportExcel" method="post">

<input hidden="hidden" id="start" name="Start"/>
<input hidden="hidden" id="end" name="End"/>
            <button href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm"><i class="fas fa-download fa-sm text-white-50"></i> Export to Excel</button>
        </form>

            
        
        <input readonly="readonly" style="max-width: 240px;" name="custom" type="text" class="date-range ml-3 d-none form-control d-sm-inline-block shadow-sm" /> 
    

            
    
        
    </div>


    
    
    
    
        <div class="row-xl-12 mt-4">
            
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Booking Overview</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                      

                            <table id="example" class="border-0 table table-bordered" width="100%">
                                <thead>
                                <tr>
                                    <th> </th>
                                    <th class="border-none" style="font-size: 14px">Dato</th>
                                    <th style="font-size: 14px">ID</th>
                                    <th style="font-size: 14px">Paller</th>
                                    <th style="font-size: 14px">Navn</th>
                                    <th style="font-size: 14px">Kontakt</th>
                                    <th style="font-size: 14px">Port</th>
                                    <th style="font-size: 14px">Ankomst<br/>Tid</th>
                                    <th style="font-size: 14px">Faktisk<br/>Ankomst</th>
                                    <th style="font-size: 14px">Start<br/>Læsning</th>
                                    <th style="font-size: 14px">Slut<br/>Læsning</th>
                                    <th style="font-size: 14px">Update</th>

                                </tr>
                                </thead>

                                <tbody>


                                </tbody>


                            </table>

               
                    </div>
                </div>
            </div>
            
        
         
    </div>
    
</div>






</body>


@section Scripts{
<script type="text/javascript" src="https://cdn.jsdelivr.net/jquery/latest/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js"></script>
<script src="https://cdn.datatables.net/plug-ins/1.10.20/sorting/datetime-moment.js"></script>
      <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
          <script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js"></script>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/locale/da.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
<script src="https://cdn.datatables.net/plug-ins/1.10.19/sorting/datetime-moment.js"></script>
<script src="~/js/DateRingePicker.js"></script>
<script> src="https://cdn.datatables.net/plug-ins/1.10.11/sorting/date-eu.js"</script>
        
<script>
    



        

$(function () {
            $.fn.dataTable.moment( 'DD/MM/YYYY' );
       var table = $('#example').DataTable( {
           
           "autoWidth": true,
           
            "columnDefs": [
               { "width": "5%", "targets": 0 }
             ],
           "serverSide": false,
               "ajax": {
                               "url": "BookingOverview?handler=Today",
                               "type": "GET",
                               "datatype": "application/json",
                               "dataSrc": "bookings",
                               
                           },
                           
               "columns": [
                   {
                                        "className": 'details-control',
                                        "orderable": false,
                                        "data": "internalId",
                                        "defaultContent": '',
                                        "render": function (data) {
                                            return '<i class="fas fa-caret-down" aria-hidden="true"></i> <input type="hidden" name="id" value="' + data + '">';
                                        },
                                        width:"15px",
                                        "type": 'datetime-moment',
                                        orderData: [1, 7]
                                                                
                                    },
                   { 
                       "data": "bookingTime" , render: function(data ) {
                           return moment(data).format("DD/MM") + '<input type="hidden" name="dateTo" value=" ' + data + ' "/>';
                       },
                       width:"70px",
                       
                   },
                   { "data": "externalId" },
                  
                   { "data": "totalPallets", },
                   { "data": "transporterName" },
                   { "data": "email" },
                   {"data" : "port"},
                   {"data" : "interval.startTime",
                    orderData: [1, 7],
                    render: function(data) {
                       return moment(data).format("HH:mm")
                       
                   }},
                   {
                   "data" : "actualArrival" , render: function(data){
                        return '<input class="time form-control" name="actualArrival" value="' +moment(data).format("HH:mm")+'" type="time"/> '
                   },
                    },
                                                                  
                   {"data" : "startLoading" , render: function(data){
                                                                    return '<input class="time form-control" name="startLoading" value="' + moment(data).format("HH:mm")+'"  type="time"/> '
                                                               }},
                   {"data" : "endLoading" , render: function(data){
                                                                  return  ' <input  class="time form-control" name="endLoading" value="'+  moment(data).format("HH:mm")   +'" type="time"/>  '
                                                             }},
                    {"data" : null , render: function(data){
                                                                  return  '<Button  class="btn-sm btn btn-secondary"  >Opdater</button> </form> '
                                                              }},
                   
                   
               ]
           } )
           
           
           ;
       
     
     
      $('#example tbody').on( 'click', 'button', function (funсtion) {
          UpdateTimeModel = {
              Times : [],
              Id : null
          };
          var data = table.row( $(this).parents('tr').find("input.form-control").each(function(e, f){
         
          UpdateTimeModel.Times.push(f.value);
           }) );
           var data = table.row( $(this).parents('tr') ).data();
           UpdateTimeModel.Id = data.internalId;
          var currentLocation = window.location;
  
          var location = currentLocation + '?handler=UpdateNew';
            
              $.ajax({
                  type: "POST",
          
                  url: location,
                  beforeSend: function(xhr) {
                     xhr.setRequestHeader('RequestVerificationToken', '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken');
                  },
                  
                  data: JSON.stringify(UpdateTimeModel),
                  contentType: "application/json",
                  dataType: "json",
                  success: function(data) {
                      console.log("succes")
                      location.reload();
          
                  },
                  failure: function(data) {
                      console.log("fail")
                      location.reload();
          
                  }
              });
           
                         
           } );
            
    // Add event listener for opening and closing details
         $('#example tbody').on('click', 'td.details-control', function () {
             console.log("hej")
             var tr = $(this).closest('tr');
             var tdi = tr.find("i.fa");
             var row = table.row(tr);
             console.log(row.data())
             if (row.child.isShown()) {
                 // This row is already open - close it
                 row.child.hide();
                 tr.removeClass('shown');
                 tdi.first().removeClass('fas fa-caret-up');
                 tdi.first().addClass('fas fa-caret-down');
             }
             else {
                 // Open this row
                 row.child(format(row.data())).show();
                 tr.addClass('shown');
                 tdi.first().removeClass('fas fa-caret-down');
                 tdi.first().addClass('fas fa-caret-up');
             }
         });

         table.on("user-select", function (e, dt, type, cell, originalEvent) {
             if ($(cell.node()).hasClass("details-control")) {
                 e.preventDefault();
             }
         });
         
         
    } );
   
        
 
        
        
        function toggle(className) {
            var x = '.' + className;
            if ($(x).is(":hidden")) {
                show(className)
            } else {
                hide(className)
            }
        }
  
 
        function hide(className) {
            var x = '.' + className;
            $(x).hide();
        }
   


        function show(className) {
            var x = '.' + className;
            $(x).show();
    }
    
 

      
    function format(d){
            console.log(d)
            console.log(d.ordersListViewModel.length);
            var table = "";
            for(var i=0; i<d.ordersListViewModel.length;i++) {
                table += '<table cellpadding="5" class="table table-hover table-sm " cellspacing="0" border="0" style="background-color: #f8f9fa; width: 100%; padding-left:50px;">' +
                                                              
                                                              '<thead class="thead-dark">' + 
                                                              '<tr>' + 
                                                              '<td> ID </td>' + 
                                                               '<td> Kunde  </td>' +
                                                                  '<td> Kunde tlf  </td>' +
                                                                '<td> Total pallets </td>' +
                                                                '<td> Bottom Pallets </td>' +
                                                                '<td> Comment </td>' +
                                                                '</tr>' + 
                                                                '</thead>' + 
                                                                '<tbody>' + 
                                                              '<tr>' + 
                                                                '<td>'+ d.ordersListViewModel[i].externalId +'</td>' +  
                                                                 '<td>'+ d.ordersListViewModel[i].supplierViewModel.name +'</td>' +  
                                                                 '<td>'+ d.ordersListViewModel[i].supplierViewModel.telephone +'</td>' +  
                                                                  '<td>'+ d.ordersListViewModel[i].totalPallets +'</td>' +  
                                                                  '<td>'+ d.ordersListViewModel[i].bottomPallets+' </td>' +    
                                                                     '<td style="max-width: 80px" ">'+ d.ordersListViewModel[i].comment+' </td>' +    
                                                              '</tr>' +
                                                              '</tbody>' + 
                                                             
                                                          '</table>';  
            }
        
       return  table;
            
             // `d` is the original data object for the row
            
        }
    
 
        


$(function() {
    $("input.date-range").daterangepicker({
        opens: 'left'
    });

    $("input.date-range").on('apply.daterangepicker', function(ev, picker) {
        $(this).val(picker.startDate.format('DD/MM/YYYY -') + picker.endDate.format(' DD/MM/YYYY'));
        
          $('#example').DataTable().clear().destroy();
            $('#example tbody').off('click');
            $('.SubmitButton').off('click');
            $('#start').val(picker.startDate.format('MM/DD/YYYY'));
            $('#end').val(picker.endDate.format('MM/DD/YYYY'));
            
              $.fn.dataTable.moment('DD/MM/YYYY');
           
            var table = $('#example').DataTable( {
                "processing": true,
                "serverSide": false,
                ordering: true,
                "ajax": {
                    "url": "BookingOverview?handler=custom",
                    "type": "GET",
                    "datatype": "application/json",
                    "dataSrc": "bookings",
                    "data": function (d) {
                        console.log(picker.startDate.format('MM/DD/YYYY'));
                        d.start = picker.startDate.format('MM/DD/YYYY');
                        d.end =  picker.endDate.format('MM/DD/YYYY');
                        
                        
                    }
        
                },
        
                "columns": [
                    {
                        "className": 'details-control',
                        "orderable": false,
                        "data": "internalId",
                        "defaultContent": '',
                        "render": function (data) {
                            return '<i class="fas fa-caret-down" aria-hidden="true"></i> <input type="hidden" name="id" value="' + data + '">';
                        },
                        width:"15px"
                    },
                    {
                        "data": "bookingTime" , render: function(data ) {
                            return moment(data).format("DD/MM/YYYY") + '<input type="hidden" name="dateTo" value=" ' + data + ' "/>';
                        },
                        
                        width:"70px"
                 
                    },
                    { "data": "externalId" },
        
                    { "data": "totalPallets" },
                    { "data": "transporterName" },
                    { "data": "email" },
                    {"data" : "port"},
                    {"data" : "interval.startTime" , render: function(data) {
                           return moment(data).format("HH:mm")
                        },
                        orderData: [1, 7]
                        
                        
                        },
                    {"data" : "actualArrival" , render: function(data){
                            return '<input class="time form-control" name="actualArrival" value="' +moment(data).format("HH:mm")+'" type="time"/> '
                        } },
        
                    {"data" : "startLoading" , render: function(data){
                            return '<input class="time form-control" name="startLoading" value="' + moment(data).format("HH:mm")+'"  type="time"/> '
                        }},
                    {"data" : "endLoading" , render: function(data){
                            return  ' <input  class=" time form-control" name="endLoading" value="'+  moment(data).format("HH:mm")   +'" type="time"/>  '
                        }},
                    {"data" : null , render: function(data){
                            return  '<Button  class=" SubmitButton btn btn-secondary"  >Opdater</button> </form> '
                        }},
        
        
                ]
            } );
        
           
             
     
      $('#example tbody').on( 'click', 'button', function (funсtion) {
          console.log()
          UpdateTimeModel = {
              Times : [],
              Id : null
          };
          var data = table.row( $(this).parents('tr').find("input.form-control").each(function(e, f){
         console.log(f.value);
          UpdateTimeModel.Times.push(f.value);
           }) );
           var data = table.row( $(this).parents('tr') ).data();
           UpdateTimeModel.Id = data.internalId;
          var currentLocation = window.location;
  
          var location = currentLocation + '?handler=UpdateNew';
            
              $.ajax({
                  type: "POST",
          
                  url: location,
                  beforeSend: function(xhr) {
                     xhr.setRequestHeader('RequestVerificationToken', '@AntiForgery.GetAndStoreTokens(HttpContext).RequestToken');
                  },
                  
                  data: JSON.stringify(UpdateTimeModel),
                  contentType: "application/json",
                  dataType: "json",
                  success: function(data) {
                      console.log("succes")
                      location.reload();
          
                  },
                  failure: function(data) {
                      console.log("fail")
                      location.reload();
          
                  }
              });
           
                         
           } );
            
            // Add event listener for opening and closing details
            $('#example tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var tdi = tr.find("i.fa");
                var row = table.row(tr);
                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                    tdi.first().removeClass('fas fa-caret-up');
                    tdi.first().addClass('fas fa-caret-down');
                }
                else {
                    // Open this row
                    row.child(format(row.data())).show();
                    tr.addClass('shown');
                    tdi.first().removeClass('fas fa-caret-down');
                    tdi.first().addClass('fas fa-caret-up');
                }
            });
        
            table.on("user-select", function (e, dt, type, cell, originalEvent) {
                if ($(cell.node()).hasClass("details-control")) {
                    e.preventDefault();
                }
            });

    });
    
    
});
        
      // UMD
      (function( factory ) {
          "use strict";
       
          if ( typeof define === 'function' && define.amd ) {
              // AMD
              define( ['jquery'], function ( $ ) {
                  return factory( $, window, document );
              } );
          }
          else if ( typeof exports === 'object' ) {
              // CommonJS
              module.exports = function (root, $) {
                  if ( ! root ) {
                      root = window;
                  }
       
                  if ( ! $ ) {
                      $ = typeof window !== 'undefined' ?
                          require('jquery') :
                          require('jquery')( root );
                  }
       
                  return factory( $, root, root.document );
              };
          }
          else {
              // Browser
              factory( jQuery, window, document );
          }
      }
      (function( $, window, document ) {
       
       
      $.fn.dataTable.render.moment = function ( from, to, locale ) {
          // Argument shifting
          if ( arguments.length === 1 ) {
              locale = 'en';
              to = from;
              from = 'YYYY-MM-DD';
          }
          else if ( arguments.length === 2 ) {
              locale = 'en';
          }
       
          return function ( d, type, row ) {
              var m = window.moment( d, from, locale, true );
       
              // Order and type get a number value from Moment, everything else
              // sees the rendered value
              return m.format( type === 'sort' || type === 'type' ? 'x' : to );
          };
      };
       
       
      }));

        
    
    </script>
}